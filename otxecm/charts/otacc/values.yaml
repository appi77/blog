########################################################################
# Settings for Core Archive Connector
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
########################################################################

## Docker image of the Core Archive Connector
## ------------------------------------------

image:
   ## Specifies the root folder within the Docker registry
   source:

   ## Specifies the image name
   name: otacc
   tag: 25.2.2

   ## imagePullPolicy (see https://kubernetes.io/docs/concepts/containers/images/)
   # pullPolicy: Always

## -----------------------------------------------------------------------
## Important: The following values are only consumed during "helm install"
## During "helm upgrade" the values are ignored by the Connector.
## -----------------------------------------------------------------------

## Core Archive and Business Administrator
## ---------------------------------------

cloud:
   ## Specifies the URL to Core Archive
   url:

   ## Specifies the name of the Business Administrator
   baUser:

   ## Allow insecure server connections when using SSL
   ## For productive Core Archive servers there is no need to set this flag
   insecure: false

   ## Specifies the lifetime (in days) of the generated BA API key
   ## (API key will be used by the Connector itself to request some BA API commands)
   baApiKeyExpiryDays:

## Connector internal settings
## ---------------------------

connector:
   publicHostname:
   
   ## The following format is supported by the httpsProxy variable
   ## http://<proxyHost>:<proxyPort>
   ## http://<proxyUser>:<proxyPassword>@<proxyHost>:<proxyPort>
   httpsProxy:

   ## Specifies the hostname of the container
   ## If this parameter is not set the hostname is generated by Kubernetes
   # hostname: otacc

   ## If the connector is already registered in Core Archive and this
   ## connector needs a reregistration, then set this value to true
   reregister: false

   ## Following log levels are supported: Warn, Info, Debug, Trace
   loglevel: Info

   ## Use a HTTP proxy
   useProxy: false

## Container related settings
## --------------------------

## serviceName defines the name of the Kubernetes service for otacc
serviceName: otacc

## port defines the internal port of the Kubernetes service for otacc
port: 8080

## serviceAccountName defines the name of the service account the
## pods are running under.
serviceAccountName: 

service:
  # custom annotations that need to be assigned to service.
  annotations: []
  # below is an example
  # - "imageregistry: \"https://registry.opentext.com/\""

## readinessProbe indicates if the Core Archive Connector pod is
## ready to receive traffic.
readinessProbe:
  enabled: true

  ## After failing failureThreshold times, pod won't receive any further data.
  failureThreshold: 3

  ## The probe is repeated every periodSeconds.
  periodSeconds: 30

  ## Probes are started initialDelaySeconds after pod inital start.
  initialDelaySeconds: 25

  ## Count as failed probe if probe doesn't return after timeoutSeconds.
  timeoutSeconds: 6

## livenessProbe indicates if the Core Archive Connector pod is
## still alive and operational.
livenessProbe:
  enabled: true

  ## After failing failureThreshold times pod gets restarted.
  failureThreshold: 3

  ## The probe is repeated every periodSeconds.
  periodSeconds: 30

  ## Probes are started initialDelaySeconds after pod inital start.
  initialDelaySeconds: 0

  ## Count as failed probe if probe doesn't return after timeoutSeconds.
  timeoutSeconds: 6

## resources.* defines the resource requirements for Core Archive Connector
resources:
  enabled: true
  requests:
    cpu: 1
    memory: 2Gi
  limits:
    cpu: 2
    memory: 4Gi
  ## logStorage defines the storage size for the logs volume
  logStorage: 5Gi
  ## storageClassName defines the Kubernetes storage class for persistent volumes
  storageClassName:

## existingSecret: An already existing kubernetes secret, which contains passwords.
existingSecret:

## ingressEnabled: Enable otacc specific ingress. Only set to true if deploying otacc chart standalone.
ingressEnabled: false

## Enable secretlink to use api's to fetch secrets from vault. disable this to use k8's secret
secretlink:
  enabled:
  image:
    name: secretlink
    source:
    tag: latest
  ## loglevel: SecretLink Loglevel by default INFO
  ## address: Address of the Vault Server incl. protocol and port (e.g. https://vaulttest-csdps.otxlab.net/)
  ## mountpoint: Mount Point of the secrets engine (e.g. "kv")
  ## namespace: Namespace of the Vault Enterprise deployment (e.g. "bn-tg")
  ## path: Path of the secret (e.g. dev/dev-sandbox/bn-vault-example/foo)
  ## authpath: Name of the Authentication Path (e.g. auth/jwt-bn-vault-example-dev-dev-sandbox-anthos-bp2-bn-cicd-sandbox-btse-sandbox-1)
  ## role: Name of the Authentication Role (e.g. anthos-bp2-bn-cicd-sandbox-btse-sandbox-1)
  loglevel:
  vault:
      address:
      mountpoint:
      namespace:
      path:
      authpath:
      role:

config:
  ## timeZone: This sets the time zone of the Linux OS within the container. The default value for
  ## the timeZone is Etc/UTC. The value for the timeZone MUST be a CORRECT value from a trusted
  ## source, otherwise unexpected behaviour will occur, this could have unforeseen repercussions for
  ## software running in the container.
  timeZone:

