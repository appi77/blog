{{- if .Values.ingress.enabled -}}
{{ $isV1ApiSupported := .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: {{ $isV1ApiSupported | ternary "networking.k8s.io/v1" "networking.k8s.io/v1beta1" }}
kind: Ingress
metadata:
  name: {{ .Chart.Name }}
  annotations:
{{- if and .Values.global.ingressClass (not $isV1ApiSupported) }}
    kubernetes.io/ingress.class: "{{ .Values.global.ingressClass }}"
{{- end }}
  {{- range $key, $value := .Values.global.ingressAnnotations }}
    {{ $key }}: {{ $value | squote }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ include "brava.chart" . }}
    app.kubernetes.io/instance: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
{{- if and .Values.global.ingressClass $isV1ApiSupported }}
  ingressClassName: {{ .Values.global.ingressClass }}
{{- end }}
  {{- $subcharts := (list "asset" "config" "highlight" "markup" "metis" "publication" "viewer" "otds") }}
{{- if and (eq .Values.global.publicWebProtocol "https") (.Values.global.ingressSSLSecret) }}
  tls:
    - hosts:
   {{- range $subchart := $subcharts }}
   {{- $data := dict "svc" $subchart "Values" $.Values "Release" $.Release }}
     {{- template "ingress-otiv.host.svc" $data }}
   {{- end }}
      secretName: {{ .Values.global.ingressSSLSecret }}
{{- end }}
  rules:
  {{- range $subchart := $subcharts }}
  {{- $data := dict "svc" $subchart "isV1ApiSupported" $isV1ApiSupported "chartName" $.Chart.Name "Values" $.Values "Release" $.Release }}
    {{- template "ingress-otiv.rule.svc" $data }}
  {{- end }}
{{- end }}
