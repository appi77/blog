{{- if not .Values.justDatabase }}
{{- if not .Values.global.otdsMigration }}
{{- if or (and (include "is.iv" .) (not .Values.global.otivSecretProviderClass.enabled) (not .Values.global.secretlink.enabled) (not .Values.otcs)) (and .Values.otcs .Values.global.amqp.ssl) }}
{{- $useSecret := false }}
{{- $secret := lookup "v1" "Secret" .Release.Namespace "otiv-base-secrets" -}}
apiVersion: v1
kind: Secret
metadata:
  name: otiv-base-secrets
  labels:
    app.kubernetes.io/name: {{ include "brava.name" . }}
    helm.sh/chart: {{ include "brava.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
{{- if and (include "is.iv" .) (not .Values.otcs) (not .Values.existingSecret) (not .Values.global.existingSecret) .Values.global.database.adminPassword }}
  {{ .Values.global.dbSecretKey }}: {{ .Values.global.database.adminPassword | b64enc | quote }}
  {{ .Values.global.otdsSecretKey}} : {{ .Values.global.masterPassword | b64enc }}
{{- end }}
{{- if and (include "is.iv" .) (not .Values.otcs) (not .Values.existingSecret) (not .Values.global.existingSecret) .Values.global.database.ivPassword }}
  {{ .Values.global.ivDbSecretKey }}: {{ .Values.global.database.ivPassword | b64enc | quote }}
{{- end }}
{{- if and (include "is.iv" .) (not .Values.otcs) (not .Values.existingSecret) (not .Values.global.existingSecret) .Values.global.amqp.password }}
  rabbitmq-password: {{ .Values.global.amqp.password | b64enc }}
{{- end }}
{{- if .Values.global.amqp.ssl }}
  javact: Y2hhbmdlaXQ=
{{- end }}
{{- if and (include "is.iv" .) (not .Values.otcs) (not .Values.existingSecret) (not .Values.global.existingSecret) }}
{{- if .Values.publication.enabled }}
{{- $publicationKey := .Values.publication.clientSecretKey -}}
{{- $monitoringKey := .Values.publication.monitoring.clientSecretKey -}}
{{- if $secret }}
{{- if and (eq $publicationKey "OTIV_PUBLICATION_CLIENT_SECRET") (index $secret.data $publicationKey) }}
{{- $useSecret = true }}
{{- end }}
{{- end }}
{{- if $useSecret }}
  {{ $publicationKey }}: {{ $secret.data.OTIV_PUBLICATION_CLIENT_SECRET }}
  {{ $monitoringKey }}: {{ $secret.data.OTIV_MONITOR_CLIENT_SECRET }}
{{- else }}
  {{ $publicationKey }}: {{ default (randAlphaNum 16 | nospace) .Values.publication.clientSecret | b64enc }}
  {{ $monitoringKey }}: {{ default (randAlphaNum 16 | nospace) .Values.publication.monitoring.clientSecret | b64enc }}
{{- end }}
{{- end }}
{{- if .Values.publisher.enabled }}
{{- $useSecret = false }}
{{- $publisherKey := .Values.publisher.clientSecretKey -}}
{{- if $secret }}
{{- if and (eq $publisherKey "OTIV_PUBLISHER_CLIENT_SECRET") (index $secret.data $publisherKey) }}
{{- $useSecret = true }}
{{- end }}
{{- end }}
{{- if $useSecret }}
  {{ $publisherKey }}: {{ $secret.data.OTIV_PUBLISHER_CLIENT_SECRET }}
{{- else }}
  {{ $publisherKey }}: {{ default (randAlphaNum 16 | nospace) .Values.publisher.clientSecret | b64enc }}
{{- end }}
{{- end }}
{{- if .Values.highlight.enabled }}
{{- $useSecret = false }}
{{- $highlightKey := .Values.highlight.clientSecretKey -}}
{{- if $secret }}
{{- if and (eq $highlightKey "OTIV_HIGHLIGHT_CLIENT_SECRET") (index $secret.data $highlightKey) }}
{{- $useSecret = true }}
{{- end }}
{{- end }}
{{- if $useSecret }}
  {{ $highlightKey }}: {{ $secret.data.OTIV_HIGHLIGHT_CLIENT_SECRET }}
{{- else }}
  {{ $highlightKey }}: {{ default (randAlphaNum 16 | nospace) .Values.highlight.clientSecret | b64enc }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- if and (include "is.iv" .) (.Values.global.usingServiceMesh) }}
---
{{- $secret := lookup "v1" "Secret" .Release.Namespace "otiv-resource-secret" -}}
apiVersion: v1
kind: Secret
metadata:
  name: otiv-resource-secret
type: Opaque
data:
{{- if $secret }}
  name: {{ $secret.data.name }}
  resource: {{ $secret.data.resource }}
{{- else }}
  name: {{ "iv" | b64enc }}
  resource: {{ "initialization:ResourceString" | b64enc | b64enc }}
{{- end }}

---
{{- $secret := lookup "v1" "Secret" .Release.Namespace "otiv-highlight-secrets" -}}
apiVersion: v1
kind: Secret
metadata:
  name: otiv-highlight-secrets
type: Opaque
data:
{{- if $secret }}
  authId: {{ $secret.data.authId }}
  authSecret: {{ $secret.data.authSecret }}
{{- else }}
  authId: {{ "iv-highlight" | b64enc }}
  authSecret: {{ "initializationSecret" | b64enc }}
{{- end }}

---
{{- $secret := lookup "v1" "Secret" .Release.Namespace "otiv-metis-secrets" -}}
apiVersion: v1
kind: Secret
metadata:
  name: otiv-metis-secrets
type: Opaque
data:
{{- if $secret }}
  authId: {{ $secret.data.authId }}
  authSecret: {{ $secret.data.authSecret }}
{{- else }}
  authId: {{ "iv-metis" | b64enc }}
  authSecret: {{ "initializationSecret" | b64enc }}
{{- end }}

---
{{- $secret := lookup "v1" "Secret" .Release.Namespace "otiv-publication-secrets" -}}
apiVersion: v1
kind: Secret
metadata:
  name: otiv-publication-secrets
type: Opaque
data:
{{- if $secret }}
  authId: {{ $secret.data.authId }}
  authSecret: {{ $secret.data.authSecret }}
{{- else }}
  authId: {{ "iv-publication" | b64enc }}
  authSecret: {{ "initializationSecret" | b64enc }}
{{- end }}

---
{{- $secret := lookup "v1" "Secret" .Release.Namespace "otiv-publisher-secrets" -}}
apiVersion: v1
kind: Secret
metadata:
  name: otiv-publisher-secrets
type: Opaque
data:
{{- if $secret }}
  authId: {{ $secret.data.authId }}
  authSecret: {{ $secret.data.authSecret }}
{{- else }}
  authId: {{ "iv-publisher" | b64enc }}
  authSecret: {{ "initializationSecret" | b64enc }}
{{- end }}

{{- end }}
{{- end }}
{{- if not .Values.global.existingOtivCustomizedCertSecret }}
---
{{- if .Values.global.enableOtivCustomizedTruststore }}
apiVersion: v1
kind: Secret
metadata:
  name: otiv-certs
data:
{{- if .Values.singleCaCert }}
{{/*
Support single cert file
*/}}
  rootCA.crt: |-
    {{ .Values.singleCaCert | b64enc }}
{{- else }}
  {{ range $path, $_ :=  .Files.Glob  "certificates/*" }}
  {{ $subdir := dir $path }}
  {{ $currentFilename := ($path | replace (printf "%s/" $subdir) "" ) }}
  {{ $currentFilename | indent 2 }}: |-
      {{ tpl ($.Files.Get $path) $ | b64enc }}
  {{ end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
