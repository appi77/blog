{{- if or (eq .Values.global.otcsPublicUrl "") (eq .Values.global.otdsPublicUrl "") }}
# Enable all pods in default namespace to read Kubernetes api
# this is required for OpenText Content Server to talk to OTDS
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    {{- include (printf "%s%s" .Chart.Name ".labels" ) . | nindent 4 }}
  name: {{ .Release.Namespace }}-viewer
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ default .Values.global.serviceAccountName .Values.otcs.serviceAccountName }}
    namespace: {{ .Release.Namespace }}
{{- end }}
---
{{- if ne .Values.global.serviceAccountName "default"}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.global.serviceAccountName }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Release.Namespace }}
  name: otcs-automation-role
  labels:
    {{- include (printf "%s%s" .Chart.Name ".labels" ) . | nindent 4 }}
rules:
- apiGroups: ["apps"] # "" indicates the core API group
  resources: ["statefulsets","statefulsets/scale","statefulsets/status"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    {{- include (printf "%s%s" .Chart.Name ".labels" ) . | nindent 4 }}
  name: otcs-automation-rolebinding
  namespace: {{ .Release.Namespace }}  
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: otcs-automation-role
subjects:
- kind: ServiceAccount
{{- if .Values.global.otcs.enabled }}
  name: {{ default .Values.global.serviceAccountName .Values.otcs.serviceAccountName }}
{{- else }}
  name: {{ .Values.global.serviceAccountName }}
{{- end }}
  namespace: {{ .Release.Namespace }}    
