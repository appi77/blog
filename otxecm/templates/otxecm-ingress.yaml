{{- if eq .Values.global.ingressEnabled true }}
{{ $isV1ApiSupported := .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
{{- $otivComponents := (list "asset" "config" "highlight" "markup" "publication" "viewer") }}
########################################################################
# Kubernetes Ingress for Content Server, Archive Center and OTDS
# External Interface to provide a Fully Qualified Domain Name (FQDN)
# and enable secure HTTPS communication (if global.ingressSSLSecret is provided)
########################################################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ingress
  annotations:
{{- if .Values.global.ingressClass }}
# Checking that K8s version is 1.17 or earlier
{{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "18")}}
    kubernetes.io/ingress.class: {{ .Values.global.ingressClass }}
{{- end }}
{{- end }}

{{- include "otxecm.ingress.annotations" . }}
spec:

{{- if (.Values.global.ingressClass)}}
# Checking that K8s version is 1.18 or greater
{{- if or (gt .Capabilities.KubeVersion.Major "1") (gt .Capabilities.KubeVersion.Minor "17")}}
  ingressClassName: {{ .Values.global.ingressClass }}
{{- end }}
{{- end }}

{{- if .Values.global.ingressSSLSecret }}
  tls:
    - hosts:
{{- if eq .Values.global.otcs.enabled true }}
{{- $csurl := (default .Values.global.otcsPublicUrl .Values.otcs.config.url) }}
      - {{ regexReplaceAllLiteral "^http(s?)://" $csurl "" }}
{{- if not (regexFind "^http(s?)://" $csurl ) }}
{{- fail "A valid global.otcsPublicUrl value with http(s)://domain is required" }}
{{- end }}
{{- end }}
{{- if eq .Values.global.otds.enabled true }}
      - {{ regexReplaceAllLiteral "^http(s?)://" .Values.global.otdsPublicUrl "" }}
{{- if not (regexFind "^http(s?)://" .Values.global.otdsPublicUrl ) }}
{{- fail "A valid global.otdsPublicUrl value with http(s)://domain is required" }}
{{- end }}
{{- end }}
{{- if eq .Values.global.otac.enabled true }}
      - {{ regexReplaceAllLiteral "^http(s?)://" .Values.global.otacPublicUrl "" | regexFind "[^:]+" | required "A valid .Values.global.otacPublicUrl value with http(s)://domain is required" }}
{{- if not (regexFind "^http(s?)://" .Values.global.otacPublicUrl ) }}
{{- fail "A valid global.otacPublicUrl value with http(s)://domain is required" }}
{{- end }}
{{- end }}
{{- if eq .Values.global.otpd.enabled true }}
      - {{ regexReplaceAllLiteral "^http(s?)://" .Values.global.otpdPublicUrl "" | regexFind "[^:]+" | required "A valid .Values.global.otpdPublicUrl value with http(s)://domain is required" }}
{{- if not (regexFind "^http(s?)://" .Values.global.otpdPublicUrl ) }}
{{- fail "A valid global.otpdPublicUrl value with http(s)://domain is required" }}
{{- end }}
{{- end }}
{{- if and (.Values.global.otiv.enabled) (not .Values.otiv.ingress.enabled) }}
  {{- range $otivComponent := $otivComponents }}
  {{- $data := dict "svc" $otivComponent "Values" $.Values.otiv "Release" $.Release }}
      {{- template "ingress-otiv.host.svc" $data }}
  {{- end }}
{{- end }}
      secretName: {{ .Values.global.ingressSSLSecret }}
{{- end }}
  rules:
{{- if eq .Values.global.otcs.enabled true }}
{{- $csurl := (default .Values.global.otcsPublicUrl .Values.otcs.config.url) }}
  - host: {{ regexReplaceAllLiteral "^http(s?)://" $csurl "" }}
    http:
      paths:      
      - path: /
        pathType: Prefix
        backend:
        {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          service:
            name: otcs-frontend
            port:
              number: {{ .Values.otcs.config.port }}
        {{- else }}
          serviceName: otcs-frontend
          servicePort: {{ .Values.otcs.config.port }}
        {{- end }}
{{- end }}
{{- if eq .Values.global.otds.enabled true }}
  - host: {{ regexReplaceAllLiteral "^http(s?)://" .Values.global.otdsPublicUrl "" }}
    http:
      paths:
      - path: /otds-admin/
        pathType: Prefix
        backend:
          {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            service:
              name: {{ include "otxecm.otdsServiceName" . }}
              port:
                number: {{ .Values.otds.otdsws.port }}
          {{- else }}
            serviceName: {{ include "otxecm.otdsServiceName" . }}
            servicePort: {{ .Values.otds.otdsws.port }}
          {{- end }}
      - path: /otdsws/
        pathType: Prefix
        backend:
          {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            service:
              name: {{ include "otxecm.otdsServiceName" . }}
              port:
                number: {{ .Values.otds.otdsws.port }}
          {{- else }}
            serviceName: {{ include "otxecm.otdsServiceName" . }}
            servicePort: {{ .Values.otds.otdsws.port }}
          {{- end }}
      - path: /ot-authws/
        pathType: Prefix
        backend:
          {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            service:
              name: {{ include "otxecm.otdsServiceName" . }}
              port:
                number: {{ .Values.otds.otdsws.port }}
          {{- else }}
            serviceName: {{ include "otxecm.otdsServiceName" . }}
            servicePort: {{ .Values.otds.otdsws.port }}
          {{- end }}
      - path: /otds-v2/
        pathType: Prefix
        backend:
          {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            service:
              name: {{ include "otxecm.otdsServiceName" . }}
              port:
                number: {{ .Values.otds.otdsws.port }}
          {{- else }}
            serviceName: {{ include "otxecm.otdsServiceName" . }}
            servicePort: {{ .Values.otds.otdsws.port }}
          {{- end }}
      - path: /otdstenant/
        pathType: Prefix
        backend:
          {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            service:
              name: {{ include "otxecm.otdsServiceName" . }}
              port:
                number: {{ .Values.otds.otdsws.port }}
          {{- else }}
            serviceName: {{ include "otxecm.otdsServiceName" . }}
            servicePort: {{ .Values.otds.otdsws.port }}
          {{- end }}
{{- end }}
{{- if eq .Values.global.otac.enabled true }}
  - host: {{ regexReplaceAllLiteral "^http(s?)://" .Values.global.otacPublicUrl "" }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
        {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          service:
            name: otac-0
            port:
              number: 8080
        {{- else }}
          serviceName: otac-0
          servicePort: 8080
        {{- end }}
{{- end }}
{{- if eq .Values.global.otacc.enabled true }}
  - host: {{ regexReplaceAllLiteral "^http(s?)://" .Values.global.otaccPublicUrl "" }}
    http:
      paths:
      paths:
      - path: /
        pathType: Prefix
        backend:
        {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          service:
            name: otacc
            port:
              number: 8080
        {{- else }}
          serviceName: otacc
          servicePort: 8080
        {{- end }}
{{- end }}
{{- if eq .Values.global.otpd.enabled true }}
  - host: {{ regexReplaceAllLiteral "^http(s?)://" .Values.global.otpdPublicUrl "" }}
    http:
      paths:
      paths:
      - path: /
        pathType: Prefix
        backend:
        {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          service:
            name: {{ .Values.otpd.serviceName }}
            port:
              number: {{ .Values.otpd.port }}
        {{- else }}
          serviceName: {{ .Values.otpd.serviceName }}
          servicePort: {{ .Values.otpd.port }}
        {{- end }}
{{- end }}
{{- if and (.Values.global.otiv.enabled) (not .Values.otiv.ingress.enabled) }}
  {{- range $otivComponent := $otivComponents }}
  {{- $data := dict "svc" $otivComponent "isV1ApiSupported" $isV1ApiSupported "chartName" "otiv" "Values" $.Values.otiv "Release" $.Release }}
    {{- template "ingress-otiv.rule.svc" $data }}
  {{- end }}
{{- end }}
---
{{- end }}
